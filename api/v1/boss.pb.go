// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/crosbymichael/boss/api/v1/boss.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	github.com/crosbymichael/boss/api/v1/boss.proto

It has these top-level messages:
	CreateRequest
	DeleteRequest
	GetRequest
	GetResponse
	KillRequest
	ListRequest
	ListResponse
	ContainerInfo
	Snapshot
	RollbackRequest
	RollbackResponse
	StartRequest
	StopRequest
	UpdateRequest
	UpdateResponse
	PushBuildRequest
	PushRequest
	CheckpointRequest
	CheckpointResponse
	RestoreRequest
	RestoreResponse
	MigrateRequest
	MigrateResponse
	Container
	Volume
	Config
	Service
	HealthCheck
	GPUs
	Resources
	Mount
	Process
	User
*/
package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// skipping weak import gogoproto "github.com/gogo/protobuf/gogoproto"
import google_protobuf1 "github.com/gogo/protobuf/types"
import _ "github.com/gogo/protobuf/types"

import time "time"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type CreateRequest struct {
	Container *Container `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`
	Update    bool       `protobuf:"varint,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{0} }

func (m *CreateRequest) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *CreateRequest) GetUpdate() bool {
	if m != nil {
		return m.Update
	}
	return false
}

type DeleteRequest struct {
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{1} }

func (m *DeleteRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetRequest struct {
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{2} }

func (m *GetRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetResponse struct {
	Container *ContainerInfo `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{3} }

func (m *GetResponse) GetContainer() *ContainerInfo {
	if m != nil {
		return m.Container
	}
	return nil
}

type KillRequest struct {
	ID     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Signal uint32 `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (m *KillRequest) Reset()                    { *m = KillRequest{} }
func (m *KillRequest) String() string            { return proto.CompactTextString(m) }
func (*KillRequest) ProtoMessage()               {}
func (*KillRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{4} }

func (m *KillRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *KillRequest) GetSignal() uint32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{5} }

type ListResponse struct {
	Containers []*ContainerInfo `protobuf:"bytes,1,rep,name=containers" json:"containers,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{6} }

func (m *ListResponse) GetContainers() []*ContainerInfo {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ContainerInfo struct {
	ID          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image       string      `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Status      string      `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	IP          string      `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Cpu         uint64      `protobuf:"varint,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
	MemoryUsage float64     `protobuf:"fixed64,6,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	MemoryLimit float64     `protobuf:"fixed64,7,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	PidUsage    uint64      `protobuf:"varint,8,opt,name=pid_usage,json=pidUsage,proto3" json:"pid_usage,omitempty"`
	PidLimit    uint64      `protobuf:"varint,9,opt,name=pid_limit,json=pidLimit,proto3" json:"pid_limit,omitempty"`
	FsSize      int64       `protobuf:"varint,10,opt,name=fs_size,json=fsSize,proto3" json:"fs_size,omitempty"`
	Config      *Container  `protobuf:"bytes,11,opt,name=config" json:"config,omitempty"`
	Snapshots   []*Snapshot `protobuf:"bytes,12,rep,name=snapshots" json:"snapshots,omitempty"`
}

func (m *ContainerInfo) Reset()                    { *m = ContainerInfo{} }
func (m *ContainerInfo) String() string            { return proto.CompactTextString(m) }
func (*ContainerInfo) ProtoMessage()               {}
func (*ContainerInfo) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{7} }

func (m *ContainerInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ContainerInfo) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ContainerInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ContainerInfo) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *ContainerInfo) GetCpu() uint64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *ContainerInfo) GetMemoryUsage() float64 {
	if m != nil {
		return m.MemoryUsage
	}
	return 0
}

func (m *ContainerInfo) GetMemoryLimit() float64 {
	if m != nil {
		return m.MemoryLimit
	}
	return 0
}

func (m *ContainerInfo) GetPidUsage() uint64 {
	if m != nil {
		return m.PidUsage
	}
	return 0
}

func (m *ContainerInfo) GetPidLimit() uint64 {
	if m != nil {
		return m.PidLimit
	}
	return 0
}

func (m *ContainerInfo) GetFsSize() int64 {
	if m != nil {
		return m.FsSize
	}
	return 0
}

func (m *ContainerInfo) GetConfig() *Container {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ContainerInfo) GetSnapshots() []*Snapshot {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

type Snapshot struct {
	ID       string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created  time.Time `protobuf:"bytes,2,opt,name=created,stdtime" json:"created"`
	Previous string    `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	FsSize   int64     `protobuf:"varint,4,opt,name=fs_size,json=fsSize,proto3" json:"fs_size,omitempty"`
}

func (m *Snapshot) Reset()                    { *m = Snapshot{} }
func (m *Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()               {}
func (*Snapshot) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{8} }

func (m *Snapshot) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Snapshot) GetCreated() time.Time {
	if m != nil {
		return m.Created
	}
	return time.Time{}
}

func (m *Snapshot) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *Snapshot) GetFsSize() int64 {
	if m != nil {
		return m.FsSize
	}
	return 0
}

type RollbackRequest struct {
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *RollbackRequest) Reset()                    { *m = RollbackRequest{} }
func (m *RollbackRequest) String() string            { return proto.CompactTextString(m) }
func (*RollbackRequest) ProtoMessage()               {}
func (*RollbackRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{9} }

func (m *RollbackRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type RollbackResponse struct {
	Container *Container `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`
}

func (m *RollbackResponse) Reset()                    { *m = RollbackResponse{} }
func (m *RollbackResponse) String() string            { return proto.CompactTextString(m) }
func (*RollbackResponse) ProtoMessage()               {}
func (*RollbackResponse) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{10} }

func (m *RollbackResponse) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type StartRequest struct {
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *StartRequest) Reset()                    { *m = StartRequest{} }
func (m *StartRequest) String() string            { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()               {}
func (*StartRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{11} }

func (m *StartRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type StopRequest struct {
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *StopRequest) Reset()                    { *m = StopRequest{} }
func (m *StopRequest) String() string            { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()               {}
func (*StopRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{12} }

func (m *StopRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type UpdateRequest struct {
	Container *Container `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{13} }

func (m *UpdateRequest) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type UpdateResponse struct {
	Container *Container `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{14} }

func (m *UpdateResponse) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type PushBuildRequest struct {
	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (m *PushBuildRequest) Reset()                    { *m = PushBuildRequest{} }
func (m *PushBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*PushBuildRequest) ProtoMessage()               {}
func (*PushBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{15} }

func (m *PushBuildRequest) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type PushRequest struct {
	Ref   string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Build bool   `protobuf:"varint,2,opt,name=build,proto3" json:"build,omitempty"`
}

func (m *PushRequest) Reset()                    { *m = PushRequest{} }
func (m *PushRequest) String() string            { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()               {}
func (*PushRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{16} }

func (m *PushRequest) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *PushRequest) GetBuild() bool {
	if m != nil {
		return m.Build
	}
	return false
}

type CheckpointRequest struct {
	ID   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ref  string `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Live bool   `protobuf:"varint,3,opt,name=live,proto3" json:"live,omitempty"`
	Exit bool   `protobuf:"varint,4,opt,name=exit,proto3" json:"exit,omitempty"`
}

func (m *CheckpointRequest) Reset()                    { *m = CheckpointRequest{} }
func (m *CheckpointRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckpointRequest) ProtoMessage()               {}
func (*CheckpointRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{17} }

func (m *CheckpointRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CheckpointRequest) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *CheckpointRequest) GetLive() bool {
	if m != nil {
		return m.Live
	}
	return false
}

func (m *CheckpointRequest) GetExit() bool {
	if m != nil {
		return m.Exit
	}
	return false
}

type CheckpointResponse struct {
}

func (m *CheckpointResponse) Reset()                    { *m = CheckpointResponse{} }
func (m *CheckpointResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckpointResponse) ProtoMessage()               {}
func (*CheckpointResponse) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{18} }

type RestoreRequest struct {
	Ref  string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Live bool   `protobuf:"varint,2,opt,name=live,proto3" json:"live,omitempty"`
}

func (m *RestoreRequest) Reset()                    { *m = RestoreRequest{} }
func (m *RestoreRequest) String() string            { return proto.CompactTextString(m) }
func (*RestoreRequest) ProtoMessage()               {}
func (*RestoreRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{19} }

func (m *RestoreRequest) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *RestoreRequest) GetLive() bool {
	if m != nil {
		return m.Live
	}
	return false
}

type RestoreResponse struct {
}

func (m *RestoreResponse) Reset()                    { *m = RestoreResponse{} }
func (m *RestoreResponse) String() string            { return proto.CompactTextString(m) }
func (*RestoreResponse) ProtoMessage()               {}
func (*RestoreResponse) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{20} }

type MigrateRequest struct {
	ID     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ref    string `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Live   bool   `protobuf:"varint,3,opt,name=live,proto3" json:"live,omitempty"`
	Stop   bool   `protobuf:"varint,4,opt,name=stop,proto3" json:"stop,omitempty"`
	To     string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	Delete bool   `protobuf:"varint,6,opt,name=delete,proto3" json:"delete,omitempty"`
}

func (m *MigrateRequest) Reset()                    { *m = MigrateRequest{} }
func (m *MigrateRequest) String() string            { return proto.CompactTextString(m) }
func (*MigrateRequest) ProtoMessage()               {}
func (*MigrateRequest) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{21} }

func (m *MigrateRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *MigrateRequest) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *MigrateRequest) GetLive() bool {
	if m != nil {
		return m.Live
	}
	return false
}

func (m *MigrateRequest) GetStop() bool {
	if m != nil {
		return m.Stop
	}
	return false
}

func (m *MigrateRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *MigrateRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

type MigrateResponse struct {
}

func (m *MigrateResponse) Reset()                    { *m = MigrateResponse{} }
func (m *MigrateResponse) String() string            { return proto.CompactTextString(m) }
func (*MigrateResponse) ProtoMessage()               {}
func (*MigrateResponse) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{22} }

type Container struct {
	ID        string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image     string              `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Network   string              `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Process   *Process            `protobuf:"bytes,4,opt,name=process" json:"process,omitempty"`
	Mounts    []*Mount            `protobuf:"bytes,5,rep,name=mounts" json:"mounts,omitempty"`
	Resources *Resources          `protobuf:"bytes,6,opt,name=resources" json:"resources,omitempty"`
	Gpus      *GPUs               `protobuf:"bytes,7,opt,name=gpus" json:"gpus,omitempty"`
	Services  map[string]*Service `protobuf:"bytes,8,rep,name=services" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	Configs   map[string]*Config  `protobuf:"bytes,9,rep,name=configs" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	Readonly  bool                `protobuf:"varint,10,opt,name=readonly,proto3" json:"readonly,omitempty"`
	Volumes   []*Volume           `protobuf:"bytes,11,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *Container) Reset()                    { *m = Container{} }
func (m *Container) String() string            { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()               {}
func (*Container) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{23} }

func (m *Container) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Container) GetProcess() *Process {
	if m != nil {
		return m.Process
	}
	return nil
}

func (m *Container) GetMounts() []*Mount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *Container) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Container) GetGpus() *GPUs {
	if m != nil {
		return m.Gpus
	}
	return nil
}

func (m *Container) GetServices() map[string]*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Container) GetConfigs() map[string]*Config {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *Container) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *Container) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type Volume struct {
	ID          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Rw          bool   `protobuf:"varint,3,opt,name=rw,proto3" json:"rw,omitempty"`
}

func (m *Volume) Reset()                    { *m = Volume{} }
func (m *Volume) String() string            { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()               {}
func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{24} }

func (m *Volume) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Volume) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Volume) GetRw() bool {
	if m != nil {
		return m.Rw
	}
	return false
}

type Config struct {
	Path    string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Source  string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Signal  string `protobuf:"bytes,3,opt,name=signal,proto3" json:"signal,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{25} }

func (m *Config) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Config) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Config) GetSignal() string {
	if m != nil {
		return m.Signal
	}
	return ""
}

func (m *Config) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type Service struct {
	Port   int64        `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Labels []string     `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty"`
	Url    string       `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Check  *HealthCheck `protobuf:"bytes,4,opt,name=check" json:"check,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{26} }

func (m *Service) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Service) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Service) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Service) GetCheck() *HealthCheck {
	if m != nil {
		return m.Check
	}
	return nil
}

type HealthCheck struct {
	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Interval int64  `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Timeout  int64  `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Method   string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *HealthCheck) Reset()                    { *m = HealthCheck{} }
func (m *HealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HealthCheck) ProtoMessage()               {}
func (*HealthCheck) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{27} }

func (m *HealthCheck) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HealthCheck) GetInterval() int64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *HealthCheck) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *HealthCheck) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type GPUs struct {
	Devices      []int64  `protobuf:"varint,1,rep,packed,name=devices" json:"devices,omitempty"`
	Capabilities []string `protobuf:"bytes,2,rep,name=capabilities" json:"capabilities,omitempty"`
}

func (m *GPUs) Reset()                    { *m = GPUs{} }
func (m *GPUs) String() string            { return proto.CompactTextString(m) }
func (*GPUs) ProtoMessage()               {}
func (*GPUs) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{28} }

func (m *GPUs) GetDevices() []int64 {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *GPUs) GetCapabilities() []string {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

type Resources struct {
	Cpus   float64 `protobuf:"fixed64,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Memory int64   `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Score  int64   `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	NoFile uint64  `protobuf:"varint,4,opt,name=no_file,json=noFile,proto3" json:"no_file,omitempty"`
}

func (m *Resources) Reset()                    { *m = Resources{} }
func (m *Resources) String() string            { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()               {}
func (*Resources) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{29} }

func (m *Resources) GetCpus() float64 {
	if m != nil {
		return m.Cpus
	}
	return 0
}

func (m *Resources) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Resources) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Resources) GetNoFile() uint64 {
	if m != nil {
		return m.NoFile
	}
	return 0
}

type Mount struct {
	Type        string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source      string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Destination string   `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Options     []string `protobuf:"bytes,4,rep,name=options" json:"options,omitempty"`
}

func (m *Mount) Reset()                    { *m = Mount{} }
func (m *Mount) String() string            { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()               {}
func (*Mount) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{30} }

func (m *Mount) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Mount) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Mount) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Mount) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

type Process struct {
	User         *User    `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Args         []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Env          []string `protobuf:"bytes,3,rep,name=env" json:"env,omitempty"`
	Capabilities []string `protobuf:"bytes,4,rep,name=capabilities" json:"capabilities,omitempty"`
}

func (m *Process) Reset()                    { *m = Process{} }
func (m *Process) String() string            { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()               {}
func (*Process) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{31} }

func (m *Process) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Process) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Process) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Process) GetCapabilities() []string {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

type User struct {
	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid uint32 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptorBoss, []int{32} }

func (m *User) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *User) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "io.boss.v1.CreateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "io.boss.v1.DeleteRequest")
	proto.RegisterType((*GetRequest)(nil), "io.boss.v1.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "io.boss.v1.GetResponse")
	proto.RegisterType((*KillRequest)(nil), "io.boss.v1.KillRequest")
	proto.RegisterType((*ListRequest)(nil), "io.boss.v1.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "io.boss.v1.ListResponse")
	proto.RegisterType((*ContainerInfo)(nil), "io.boss.v1.ContainerInfo")
	proto.RegisterType((*Snapshot)(nil), "io.boss.v1.Snapshot")
	proto.RegisterType((*RollbackRequest)(nil), "io.boss.v1.RollbackRequest")
	proto.RegisterType((*RollbackResponse)(nil), "io.boss.v1.RollbackResponse")
	proto.RegisterType((*StartRequest)(nil), "io.boss.v1.StartRequest")
	proto.RegisterType((*StopRequest)(nil), "io.boss.v1.StopRequest")
	proto.RegisterType((*UpdateRequest)(nil), "io.boss.v1.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "io.boss.v1.UpdateResponse")
	proto.RegisterType((*PushBuildRequest)(nil), "io.boss.v1.PushBuildRequest")
	proto.RegisterType((*PushRequest)(nil), "io.boss.v1.PushRequest")
	proto.RegisterType((*CheckpointRequest)(nil), "io.boss.v1.CheckpointRequest")
	proto.RegisterType((*CheckpointResponse)(nil), "io.boss.v1.CheckpointResponse")
	proto.RegisterType((*RestoreRequest)(nil), "io.boss.v1.RestoreRequest")
	proto.RegisterType((*RestoreResponse)(nil), "io.boss.v1.RestoreResponse")
	proto.RegisterType((*MigrateRequest)(nil), "io.boss.v1.MigrateRequest")
	proto.RegisterType((*MigrateResponse)(nil), "io.boss.v1.MigrateResponse")
	proto.RegisterType((*Container)(nil), "io.boss.v1.Container")
	proto.RegisterType((*Volume)(nil), "io.boss.v1.Volume")
	proto.RegisterType((*Config)(nil), "io.boss.v1.Config")
	proto.RegisterType((*Service)(nil), "io.boss.v1.Service")
	proto.RegisterType((*HealthCheck)(nil), "io.boss.v1.HealthCheck")
	proto.RegisterType((*GPUs)(nil), "io.boss.v1.GPUs")
	proto.RegisterType((*Resources)(nil), "io.boss.v1.Resources")
	proto.RegisterType((*Mount)(nil), "io.boss.v1.Mount")
	proto.RegisterType((*Process)(nil), "io.boss.v1.Process")
	proto.RegisterType((*User)(nil), "io.boss.v1.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Agent service

type AgentClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Kill(ctx context.Context, in *KillRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Rollback(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackResponse, error)
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	PushBuild(ctx context.Context, in *PushBuildRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Checkpoint(ctx context.Context, in *CheckpointRequest, opts ...grpc.CallOption) (*CheckpointResponse, error)
	Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*RestoreResponse, error)
	Migrate(ctx context.Context, in *MigrateRequest, opts ...grpc.CallOption) (*MigrateResponse, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Kill(ctx context.Context, in *KillRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Kill", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Rollback(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackResponse, error) {
	out := new(RollbackResponse)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Rollback", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Start", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Stop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) PushBuild(ctx context.Context, in *PushBuildRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/PushBuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Push", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Checkpoint(ctx context.Context, in *CheckpointRequest, opts ...grpc.CallOption) (*CheckpointResponse, error) {
	out := new(CheckpointResponse)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Checkpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*RestoreResponse, error) {
	out := new(RestoreResponse)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Restore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Migrate(ctx context.Context, in *MigrateRequest, opts ...grpc.CallOption) (*MigrateResponse, error) {
	out := new(MigrateResponse)
	err := grpc.Invoke(ctx, "/io.boss.v1.Agent/Migrate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Agent service

type AgentServer interface {
	Create(context.Context, *CreateRequest) (*google_protobuf1.Empty, error)
	Delete(context.Context, *DeleteRequest) (*google_protobuf1.Empty, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Kill(context.Context, *KillRequest) (*google_protobuf1.Empty, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	Rollback(context.Context, *RollbackRequest) (*RollbackResponse, error)
	Start(context.Context, *StartRequest) (*google_protobuf1.Empty, error)
	Stop(context.Context, *StopRequest) (*google_protobuf1.Empty, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	PushBuild(context.Context, *PushBuildRequest) (*google_protobuf1.Empty, error)
	Push(context.Context, *PushRequest) (*google_protobuf1.Empty, error)
	Checkpoint(context.Context, *CheckpointRequest) (*CheckpointResponse, error)
	Restore(context.Context, *RestoreRequest) (*RestoreResponse, error)
	Migrate(context.Context, *MigrateRequest) (*MigrateResponse, error)
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Kill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Kill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Kill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Kill(ctx, req.(*KillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Rollback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Rollback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Rollback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Rollback(ctx, req.(*RollbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_PushBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).PushBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/PushBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).PushBuild(ctx, req.(*PushBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Push(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Checkpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Checkpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Checkpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Checkpoint(ctx, req.(*CheckpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Restore(ctx, req.(*RestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Migrate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Migrate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.boss.v1.Agent/Migrate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Migrate(ctx, req.(*MigrateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.boss.v1.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Agent_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Agent_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Agent_Get_Handler,
		},
		{
			MethodName: "Kill",
			Handler:    _Agent_Kill_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Agent_List_Handler,
		},
		{
			MethodName: "Rollback",
			Handler:    _Agent_Rollback_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _Agent_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Agent_Stop_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Agent_Update_Handler,
		},
		{
			MethodName: "PushBuild",
			Handler:    _Agent_PushBuild_Handler,
		},
		{
			MethodName: "Push",
			Handler:    _Agent_Push_Handler,
		},
		{
			MethodName: "Checkpoint",
			Handler:    _Agent_Checkpoint_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _Agent_Restore_Handler,
		},
		{
			MethodName: "Migrate",
			Handler:    _Agent_Migrate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/crosbymichael/boss/api/v1/boss.proto",
}

func init() { proto.RegisterFile("github.com/crosbymichael/boss/api/v1/boss.proto", fileDescriptorBoss) }

var fileDescriptorBoss = []byte{
	// 1550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0x6d, 0x6f, 0x1b, 0xc5,
	0x13, 0xaf, 0x9f, 0xed, 0x71, 0x9c, 0xa6, 0xfb, 0xcf, 0x3f, 0x3d, 0x2e, 0x40, 0xcc, 0x51, 0x68,
	0x82, 0xa8, 0xad, 0xa6, 0xa2, 0xa5, 0x14, 0xa8, 0x9a, 0x87, 0x86, 0xaa, 0x2d, 0x8a, 0x36, 0x04,
	0x21, 0x84, 0x54, 0x9d, 0xcf, 0x6b, 0x7b, 0x95, 0xf3, 0xed, 0x71, 0xbb, 0xe7, 0xe2, 0x7e, 0x04,
	0x5e, 0xf1, 0x8e, 0xaf, 0xc4, 0xa7, 0x28, 0x12, 0x5f, 0x81, 0x77, 0xf0, 0x06, 0xed, 0xc3, 0x9d,
	0xef, 0x1c, 0xbb, 0x29, 0xf4, 0xdd, 0xcc, 0xce, 0xd3, 0x6f, 0xd6, 0x33, 0x73, 0xb3, 0x86, 0xee,
	0x90, 0x8a, 0x51, 0xdc, 0xeb, 0x78, 0x6c, 0xdc, 0xf5, 0x22, 0xc6, 0x7b, 0xd3, 0x31, 0xf5, 0x46,
	0x2e, 0xf1, 0xbb, 0x3d, 0xc6, 0x79, 0xd7, 0x0d, 0x69, 0x77, 0x72, 0x53, 0xd1, 0x9d, 0x30, 0x62,
	0x82, 0x21, 0xa0, 0xac, 0xa3, 0xd8, 0xc9, 0x4d, 0x7b, 0x7d, 0xc8, 0x86, 0x4c, 0x1d, 0x77, 0x25,
	0xa5, 0x35, 0xec, 0xcd, 0x21, 0x63, 0x43, 0x9f, 0x74, 0x15, 0xd7, 0x8b, 0x07, 0x5d, 0x32, 0x0e,
	0xc5, 0xd4, 0x08, 0xb7, 0xe6, 0x85, 0x82, 0x8e, 0x09, 0x17, 0xee, 0x38, 0xd4, 0x0a, 0xce, 0x0f,
	0xd0, 0xda, 0x8f, 0x88, 0x2b, 0x08, 0x26, 0x3f, 0xc6, 0x84, 0x0b, 0x74, 0x0b, 0x1a, 0x1e, 0x0b,
	0x84, 0x4b, 0x03, 0x12, 0x59, 0x85, 0x76, 0x61, 0xbb, 0xb9, 0xfb, 0xff, 0xce, 0x0c, 0x44, 0x67,
	0x3f, 0x11, 0xe2, 0x99, 0x1e, 0xda, 0x80, 0x6a, 0x1c, 0xf6, 0x5d, 0x41, 0xac, 0x62, 0xbb, 0xb0,
	0x5d, 0xc7, 0x86, 0x73, 0xae, 0x43, 0xeb, 0x80, 0xf8, 0x64, 0xe6, 0x7d, 0x03, 0x8a, 0xb4, 0xaf,
	0xdc, 0x36, 0xf6, 0xaa, 0x7f, 0xbc, 0xdc, 0x2a, 0x3e, 0x3a, 0xc0, 0x45, 0xda, 0x77, 0xae, 0x01,
	0x1c, 0x11, 0x71, 0x91, 0xd6, 0x43, 0x68, 0x2a, 0x2d, 0x1e, 0xb2, 0x80, 0x13, 0x74, 0xe7, 0x3c,
	0xd4, 0xb7, 0x16, 0x42, 0x7d, 0x14, 0x0c, 0x58, 0x06, 0xae, 0xf3, 0x05, 0x34, 0x1f, 0x53, 0xdf,
	0xbf, 0x20, 0x9c, 0xcc, 0x8a, 0xd3, 0x61, 0xe0, 0xfa, 0x2a, 0xab, 0x16, 0x36, 0x9c, 0xd3, 0x82,
	0xe6, 0x13, 0xca, 0x13, 0xb4, 0xce, 0x23, 0x58, 0xd1, 0xac, 0x81, 0x75, 0x17, 0x20, 0x0d, 0xc5,
	0xad, 0x42, 0xbb, 0xf4, 0x6a, 0x5c, 0x19, 0x65, 0xe7, 0xef, 0x22, 0xb4, 0x72, 0xd2, 0xa5, 0xd8,
	0xd6, 0xa1, 0x42, 0xc7, 0xee, 0x50, 0x5f, 0x78, 0x03, 0x6b, 0x46, 0x21, 0x16, 0xae, 0x88, 0xb9,
	0x55, 0x52, 0xc7, 0x86, 0x53, 0x5e, 0x42, 0xab, 0x9c, 0xf1, 0x72, 0x8c, 0x8b, 0x34, 0x44, 0x6b,
	0x50, 0xf2, 0xc2, 0xd8, 0xaa, 0xb4, 0x0b, 0xdb, 0x65, 0x2c, 0x49, 0xf4, 0x1e, 0xac, 0x8c, 0xc9,
	0x98, 0x45, 0xd3, 0x67, 0x31, 0x97, 0xee, 0xab, 0xed, 0xc2, 0x76, 0x01, 0x37, 0xf5, 0xd9, 0xa9,
	0x3c, 0xca, 0xa8, 0xf8, 0x74, 0x4c, 0x85, 0x55, 0xcb, 0xaa, 0x3c, 0x91, 0x47, 0x68, 0x13, 0x1a,
	0x21, 0xed, 0x1b, 0x17, 0x75, 0xe5, 0xbd, 0x1e, 0xd2, 0xbe, 0xb6, 0x37, 0x42, 0x6d, 0xdc, 0x48,
	0x85, 0xda, 0xf2, 0x2a, 0xd4, 0x06, 0xfc, 0x19, 0xa7, 0x2f, 0x88, 0x05, 0xed, 0xc2, 0x76, 0x09,
	0x57, 0x07, 0xfc, 0x84, 0xbe, 0x20, 0xe8, 0x06, 0x54, 0x3d, 0x16, 0x0c, 0xe8, 0xd0, 0x6a, 0xbe,
	0xaa, 0x28, 0x8d, 0x12, 0xda, 0x85, 0x06, 0x0f, 0xdc, 0x90, 0x8f, 0x98, 0xe0, 0xd6, 0x8a, 0xfa,
	0x0d, 0xd6, 0xb3, 0x16, 0x27, 0x46, 0x88, 0x67, 0x6a, 0xce, 0xaf, 0x05, 0xa8, 0x27, 0xe7, 0x4b,
	0x2f, 0xfe, 0x4b, 0xa8, 0x79, 0xaa, 0x61, 0xfa, 0xea, 0xea, 0x9b, 0xbb, 0x76, 0x47, 0xf7, 0x58,
	0x27, 0xe9, 0xb1, 0xce, 0x37, 0x49, 0x8f, 0xed, 0xd5, 0x7f, 0x7b, 0xb9, 0x75, 0xe9, 0x97, 0xdf,
	0xb7, 0x0a, 0x38, 0x31, 0x42, 0x36, 0xd4, 0xc3, 0x88, 0x4c, 0x28, 0x4b, 0x7f, 0xa4, 0x94, 0xcf,
	0x26, 0x5f, 0xce, 0x26, 0xef, 0xec, 0xc0, 0x65, 0xcc, 0x7c, 0xbf, 0xe7, 0x7a, 0x67, 0x17, 0xf5,
	0xc8, 0x11, 0xac, 0xcd, 0x54, 0x4d, 0x45, 0xfe, 0x97, 0x9e, 0x76, 0x3e, 0x84, 0x95, 0x13, 0xe1,
	0x46, 0x17, 0x36, 0xe5, 0x07, 0xd0, 0x3c, 0x11, 0x2c, 0xbc, 0x48, 0xed, 0x00, 0x5a, 0xa7, 0x6a,
	0x28, 0xbc, 0xc9, 0xa0, 0x71, 0x0e, 0x61, 0x35, 0xf1, 0xf2, 0x26, 0xb9, 0x5d, 0x83, 0xb5, 0xe3,
	0x98, 0x8f, 0xf6, 0x62, 0xea, 0xf7, 0x13, 0x3c, 0x6b, 0x50, 0x8a, 0xc8, 0x40, 0x23, 0xc7, 0x92,
	0x74, 0x3e, 0x81, 0xa6, 0xd4, 0x5a, 0xaa, 0x20, 0x9b, 0xb0, 0x27, 0x5d, 0x98, 0xa9, 0xa7, 0x19,
	0x87, 0xc0, 0x95, 0xfd, 0x11, 0xf1, 0xce, 0x42, 0x46, 0x83, 0x8b, 0x6e, 0x2f, 0x71, 0x5a, 0x9c,
	0x39, 0x45, 0x50, 0xf6, 0xe9, 0x84, 0xa8, 0xe2, 0xa8, 0x63, 0x45, 0xcb, 0x33, 0xf2, 0x13, 0x15,
	0xaa, 0x2a, 0xea, 0x58, 0xd1, 0xce, 0x3a, 0xa0, 0x6c, 0x18, 0x7d, 0x1d, 0xce, 0x6d, 0x58, 0xc5,
	0x84, 0x0b, 0x16, 0x91, 0xe5, 0xb0, 0x93, 0x08, 0xc5, 0x59, 0x04, 0xe7, 0x0a, 0x5c, 0x4e, 0xed,
	0x8c, 0xab, 0x9f, 0x0b, 0xb0, 0xfa, 0x94, 0x0e, 0x23, 0xf7, 0xc2, 0xf1, 0xfd, 0xfa, 0x59, 0x70,
	0xc1, 0xc2, 0x24, 0x0b, 0x49, 0xa3, 0x55, 0x28, 0x0a, 0xa6, 0x06, 0x50, 0x03, 0x17, 0x85, 0x9c,
	0x77, 0xd5, 0xbe, 0xfa, 0x62, 0xa8, 0xc9, 0x53, 0xc7, 0x86, 0x93, 0xf8, 0x52, 0x2c, 0x06, 0xdf,
	0x9f, 0x65, 0x68, 0xec, 0x67, 0x3e, 0x41, 0xff, 0x66, 0x50, 0x5a, 0x50, 0x0b, 0x88, 0x78, 0xce,
	0xa2, 0x33, 0xd3, 0x84, 0x09, 0x8b, 0x6e, 0x40, 0x2d, 0x8c, 0x98, 0x47, 0x38, 0x57, 0x38, 0x9b,
	0xbb, 0xff, 0xcb, 0x56, 0xd3, 0xb1, 0x16, 0xe1, 0x44, 0x07, 0xed, 0x40, 0x75, 0xcc, 0xe2, 0x40,
	0x70, 0xab, 0xa2, 0x86, 0xcc, 0x95, 0xac, 0xf6, 0x53, 0x29, 0xc1, 0x46, 0x41, 0x56, 0x6a, 0x44,
	0x38, 0x8b, 0x23, 0x8f, 0x70, 0x95, 0xdd, 0x5c, 0xa5, 0xe2, 0x44, 0x88, 0x67, 0x7a, 0xe8, 0x1a,
	0x94, 0x87, 0x61, 0xcc, 0xd5, 0x90, 0x6d, 0xee, 0xae, 0x65, 0xf5, 0x8f, 0x8e, 0x4f, 0x39, 0x56,
	0x52, 0x74, 0x1f, 0xea, 0x9c, 0x44, 0x13, 0x2a, 0x3d, 0xd7, 0x15, 0x8e, 0xf7, 0x17, 0xf6, 0x40,
	0xe7, 0xc4, 0x68, 0x1d, 0x06, 0x22, 0x9a, 0xe2, 0xd4, 0x08, 0x7d, 0x0e, 0x35, 0x3d, 0x38, 0xb9,
	0xd5, 0x50, 0xf6, 0xce, 0x62, 0xfb, 0x7d, 0xad, 0xa4, 0xcd, 0x13, 0x13, 0x39, 0xd3, 0x22, 0xe2,
	0xf6, 0x59, 0xe0, 0x4f, 0xd5, 0xd4, 0xae, 0xe3, 0x94, 0x47, 0x1f, 0x43, 0x6d, 0xc2, 0xfc, 0x78,
	0x4c, 0xb8, 0xd5, 0x54, 0x9e, 0x51, 0xd6, 0xf3, 0xb7, 0x4a, 0x84, 0x13, 0x15, 0xfb, 0x18, 0x5a,
	0x39, 0x88, 0xb2, 0xb2, 0xce, 0xc8, 0x34, 0xa9, 0xde, 0x33, 0x32, 0x45, 0x3b, 0x50, 0x99, 0xb8,
	0x7e, 0x4c, 0xcc, 0xf8, 0xcd, 0xfd, 0x3c, 0xc6, 0x16, 0x6b, 0x8d, 0xcf, 0x8a, 0x9f, 0x16, 0xec,
	0xaf, 0x61, 0x25, 0x0b, 0x7a, 0x81, 0xc3, 0xed, 0xbc, 0x43, 0x34, 0x97, 0xf9, 0x80, 0x0e, 0x33,
	0xfe, 0x1c, 0x0c, 0x55, 0x0d, 0x7a, 0x69, 0xc5, 0xb5, 0xa1, 0xd9, 0x27, 0x5c, 0xd0, 0xc0, 0x15,
	0x94, 0x05, 0xa6, 0xee, 0xb2, 0x47, 0xb2, 0xe8, 0xa3, 0xe7, 0xa6, 0x35, 0x8a, 0xd1, 0x73, 0x67,
	0x00, 0x55, 0x1d, 0x48, 0xb6, 0x48, 0xe8, 0x8a, 0x91, 0x81, 0xa7, 0x68, 0xf5, 0x51, 0x57, 0xd5,
	0x60, 0x5c, 0x19, 0x2e, 0xb3, 0x9e, 0x24, 0x1f, 0x7b, 0xc5, 0xc9, 0xda, 0x96, 0x93, 0x8e, 0x04,
	0x7a, 0x5e, 0x34, 0x70, 0xc2, 0x3a, 0x13, 0xa8, 0x99, 0x1b, 0x52, 0x81, 0x58, 0x24, 0x54, 0xa0,
	0x12, 0x56, 0xb4, 0x74, 0xe8, 0xbb, 0x3d, 0xe2, 0x73, 0xab, 0xd8, 0x2e, 0x49, 0x87, 0x9a, 0x93,
	0x57, 0x16, 0x47, 0x49, 0x14, 0x49, 0xa2, 0x1b, 0x50, 0xf1, 0xe4, 0xec, 0x31, 0x2d, 0x72, 0x35,
	0x7b, 0x65, 0x5f, 0x11, 0xd7, 0x17, 0x23, 0x35, 0x9a, 0xb0, 0xd6, 0x72, 0x18, 0x34, 0x33, 0xa7,
	0x32, 0xb6, 0x98, 0x86, 0x24, 0x49, 0x52, 0xd2, 0xb2, 0x84, 0x68, 0x20, 0x48, 0x34, 0x31, 0xdb,
	0x56, 0x09, 0xa7, 0xbc, 0x4c, 0x48, 0xae, 0xad, 0x2c, 0x16, 0x0a, 0x43, 0x09, 0x27, 0xac, 0x44,
	0x3c, 0x26, 0x62, 0xc4, 0xfa, 0x26, 0x53, 0xc3, 0x39, 0x07, 0x50, 0x96, 0xdd, 0x21, 0x2d, 0xfb,
	0x44, 0xb7, 0x85, 0xdc, 0xc3, 0x4a, 0x38, 0x61, 0x91, 0x03, 0x2b, 0x9e, 0x1b, 0xba, 0x3d, 0xea,
	0x53, 0x41, 0x49, 0x92, 0x71, 0xee, 0xcc, 0x19, 0x40, 0x23, 0xed, 0x49, 0x09, 0xda, 0x93, 0x8d,
	0x58, 0x50, 0xdb, 0x8e, 0xa2, 0x75, 0x78, 0xb9, 0xf5, 0x18, 0xc8, 0x86, 0x93, 0x33, 0x87, 0x7b,
	0x2c, 0x22, 0x06, 0xae, 0x66, 0xe4, 0xd7, 0x3d, 0x60, 0xcf, 0x06, 0xd4, 0xd7, 0x5f, 0xf7, 0x32,
	0xae, 0x06, 0xec, 0x21, 0xf5, 0x89, 0xc3, 0xa0, 0xa2, 0x26, 0xc5, 0xc2, 0x8b, 0x59, 0xf6, 0xeb,
	0xcf, 0x55, 0x59, 0xe9, 0x7c, 0x95, 0x59, 0x50, 0x63, 0xa1, 0xa4, 0xe4, 0x24, 0x93, 0xd9, 0x25,
	0xac, 0x33, 0x85, 0x9a, 0x19, 0x64, 0x72, 0xbe, 0xc4, 0x3c, 0xfd, 0x72, 0xe6, 0xe6, 0xcb, 0x29,
	0x27, 0x11, 0x56, 0x52, 0x09, 0xcc, 0x8d, 0x86, 0xc9, 0x2d, 0x29, 0x5a, 0x56, 0x05, 0x09, 0x26,
	0x56, 0x49, 0x1d, 0x49, 0xf2, 0xdc, 0x9d, 0x96, 0x17, 0xdc, 0xe9, 0x47, 0x50, 0x96, 0x7e, 0x55,
	0x4d, 0x99, 0xee, 0x69, 0x61, 0x49, 0xca, 0x93, 0x21, 0xed, 0x9b, 0x55, 0x5b, 0x92, 0xbb, 0x7f,
	0x55, 0xa1, 0xf2, 0x60, 0x48, 0x02, 0x81, 0xee, 0x41, 0x55, 0xbf, 0x52, 0x50, 0x7e, 0x91, 0xce,
	0xbe, 0x5c, 0xec, 0x8d, 0x73, 0x8b, 0xd8, 0xa1, 0x7c, 0x09, 0x49, 0x63, 0xfd, 0x08, 0xc9, 0x1b,
	0xe7, 0x1e, 0x26, 0x4b, 0x8d, 0x6f, 0x43, 0xe9, 0x88, 0x08, 0xb4, 0x91, 0x1b, 0xbc, 0xe9, 0x4b,
	0xc5, 0xbe, 0x7a, 0xee, 0x3c, 0x7d, 0x9b, 0x94, 0xe5, 0x13, 0x03, 0xe5, 0x14, 0x32, 0x8f, 0x8e,
	0xa5, 0x01, 0xef, 0x42, 0x59, 0xbe, 0x26, 0xf2, 0x86, 0x99, 0xe7, 0x86, 0x6d, 0x9d, 0x17, 0x98,
	0x98, 0x87, 0x50, 0x4f, 0x56, 0x3f, 0xb4, 0x99, 0xfb, 0xb2, 0xe4, 0x77, 0x47, 0xfb, 0xed, 0xc5,
	0xc2, 0xf4, 0xfd, 0x52, 0x51, 0x8b, 0x1f, 0xca, 0x45, 0xca, 0xee, 0x82, 0x4b, 0xc1, 0xdf, 0x81,
	0xb2, 0xdc, 0x05, 0xf3, 0xe0, 0x33, 0xdb, 0xe1, 0x52, 0xc3, 0xfb, 0x50, 0xd5, 0x7b, 0x5d, 0xfe,
	0x37, 0xca, 0x6d, 0x8c, 0xb6, 0xbd, 0x48, 0x64, 0x40, 0x3f, 0x80, 0x46, 0xba, 0xd1, 0xa1, 0x5c,
	0x7e, 0xf3, 0x8b, 0xde, 0xab, 0xc0, 0x4b, 0xdd, 0x3c, 0xf8, 0xcc, 0x02, 0xb8, 0xd4, 0xf0, 0x31,
	0xc0, 0x6c, 0x13, 0x43, 0xef, 0xe4, 0x2a, 0x74, 0x7e, 0x11, 0xb4, 0xdf, 0x5d, 0x26, 0x36, 0x89,
	0xec, 0x41, 0xcd, 0x2c, 0x62, 0xc8, 0x9e, 0xdb, 0x0e, 0x32, 0x5b, 0x9d, 0xbd, 0xb9, 0x50, 0x36,
	0xf3, 0x61, 0x96, 0xa5, 0xbc, 0x8f, 0xfc, 0x36, 0x97, 0xf7, 0x31, 0xb7, 0x5d, 0xed, 0xed, 0x7c,
	0x7f, 0xfd, 0x75, 0xfe, 0xab, 0xb8, 0x37, 0xb9, 0xf9, 0xdd, 0xa5, 0x5e, 0x55, 0xdd, 0xc8, 0xad,
	0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x25, 0xc8, 0xb7, 0xdf, 0x10, 0x00, 0x00,
}
